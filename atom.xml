<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SorrisoYi</title>
  
  <subtitle>blog</subtitle>
  <link href="/SorrisiYi/atom.xml" rel="self"/>
  
  <link href="https://addyzk.github.io/"/>
  <updated>2019-05-17T09:13:37.448Z</updated>
  <id>https://addyzk.github.io/</id>
  
  <author>
    <name>SorrisoYi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>my</title>
    <link href="https://addyzk.github.io/2019/05/17/my/"/>
    <id>https://addyzk.github.io/2019/05/17/my/</id>
    <published>2019-05-17T06:50:15.000Z</published>
    <updated>2019-05-17T09:13:37.448Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你在哪里</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
      <category term="随笔" scheme="https://addyzk.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://addyzk.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Hello my friend!</title>
    <link href="https://addyzk.github.io/2019/05/16/hello-world/"/>
    <id>https://addyzk.github.io/2019/05/16/hello-world/</id>
    <published>2019-05-16T11:43:53.939Z</published>
    <updated>2019-05-17T03:06:43.616Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to my blog ! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h3 id="主题文件的使用"><a href="#主题文件的使用" class="headerlink" title="主题文件的使用"></a>主题文件的使用</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">网络编程</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-08</span><span class="bullet">-29</span> <span class="number">20</span><span class="string">:16:19</span></span><br><span class="line"><span class="attr">cover:</span> <span class="attr">https://addyzk.github.io/Random-img/1.jpg</span>      <span class="comment"># 封面图</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">web编程</span>     <span class="comment"># 分类</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">web</span>     <span class="comment"># 标签</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to my blog ! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>网络编程</title>
    <link href="https://addyzk.github.io/2018/08/29/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    <id>https://addyzk.github.io/2018/08/29/网络编程/</id>
    <published>2018-08-29T12:16:19.000Z</published>
    <updated>2019-05-17T09:13:00.022Z</updated>
    
    <content type="html"><![CDATA[<p>计算机之间的通信，三次握手，四次挥手！TCP/UDP协议！</p><h2 id="17-网络编程"><a href="#17-网络编程" class="headerlink" title="17 网络编程"></a>17 网络编程</h2><h2 id="一、网络编程"><a href="#一、网络编程" class="headerlink" title="一、网络编程"></a>一、网络编程</h2><h4 id="1-网络编程基础"><a href="#1-网络编程基础" class="headerlink" title="1.网络编程基础"></a>1.网络编程基础</h4><blockquote><p>计算机网络：把分布在不同区域的计算机通过专门的设备使用通信线路连接起来，从而会形成一个庞大的网络系统，不同的计算机之间就可以进行信息的传递</p><p>网络编程：在同一个网络中不同的机器之间进行通信</p></blockquote><h4 id="2-计算机之间需要通信的条件"><a href="#2-计算机之间需要通信的条件" class="headerlink" title="2.计算机之间需要通信的条件"></a>2.计算机之间需要通信的条件</h4><blockquote><p>三要素：ip地址，端口，协议</p></blockquote><h5 id="2-1-ip地址"><a href="#2-1-ip地址" class="headerlink" title="2.1 ip地址"></a>2.1 ip地址</h5><blockquote><ul><li><p>概念</p><pre><code>互联网地址（Internet Protocol Address），是联网设备和互联网之间的唯一标识，在同一个网段中，ip地址是唯一的ip地址是数字型的，是一个32位整数，通常将其分为4个8位的二进制，每8位用圆点隔开，并且将8位的二进制转换为0~255之间的十进制，例如：10.0.127.108</code></pre></li><li><p>分类</p><pre><code>形式分类：    ipv4:由4个字节组成，分成4段    ipv6:由6个字节组成，分为6段功能分类：    A类：保留给政府机构，1.0.0.1~126.255.255.254    B类：分配给中小型企业，128.1.0.1-191.255.255.254     C类：分配给任何需要的个人，192.0.1.1-223.255.255.254     D类：用于组播【一种数据传输方式】，224.0.0.1-239.255.255.254     E类：用于实验，240....~255.....    127.0.0.1   回送地址，一般指的是本机的ip，localhost，一般用于测试</code></pre></li></ul><p>总结：ip地址可以唯一的确定网络上一个通信实体，但是一个通信实体可以有多个应用程序同时提供网络服务，此时还需要端口</p></blockquote><h5 id="2-2端口"><a href="#2-2端口" class="headerlink" title="2.2端口"></a>2.2端口</h5><blockquote><p>1&gt;概念</p><p>​    数据的发送和接收都需要通过端口出入计算机，端口号是唯一标识通信实体上的应用程序</p><p>​    注意：同一台机器上不能两个程序占用同一个端口，端口号：0~65535</p><p>2&gt;分类</p><p>​    a.公认端口：0~1023   </p><p>​    b.注册端口：1025~49151</p><p>​    c.动态端口或者私有端口：1024~65535</p><p>3&gt;常用的端口</p><p>​    mysql:3306</p><p>​    oracle:1521</p><p>​    tomcat:8080</p><p>​    qq:4000</p></blockquote><h5 id="2-3网络协议"><a href="#2-3网络协议" class="headerlink" title="2.3网络协议"></a>2.3网络协议</h5><blockquote><p>网络协议：只要连接到网络的设备，相互之间遵循同一种网络协议，才能够进行数据交互</p><p><img src="网络模型.gif" alt="网络模型"></p></blockquote><h4 id="3-TCP-IP协议"><a href="#3-TCP-IP协议" class="headerlink" title="3.TCP/IP协议"></a>3.TCP/IP协议</h4><blockquote><p>互联网协议，负责两台计算机之间建立可靠的【保证数据安全到达对方】，可连接【面向连接，三次握手】的通信</p></blockquote><h4 id="4-TCP协议"><a href="#4-TCP协议" class="headerlink" title="4.TCP协议"></a>4.TCP协议</h4><h5 id="4-1概念"><a href="#4-1概念" class="headerlink" title="4.1概念"></a>4.1概念</h5><blockquote><p>Transimission Control Protocol ,传输控制协议，基于字节的传输层通信协议</p><p>特点：</p><p>​    a.安全的【确保接收方完全正确的获取发送方发送的全部数据】</p><p>​    b.面向连接的【数据传输必须要建立连接，连接的过程中需要时间】</p><p>​    c.数据传输的效率较低</p><p>​    d.传输的数据的大小有限制，一旦连接建立，双方可以通过指定的格式发送数据</p><ul><li><p>面向连接：三次握手</p><pre><code>a.客户端向服务端发送一个请求b.服务端收到请求之后，回客户端一个响应c.客户端收到服务端的响应之后，回复给服务端一个确认信息</code></pre></li></ul><p><img src="三次握手.png" alt="三次握手"></p><ul><li>四次挥手    <ul><li>（1） TCP客户端发送一个FIN，用来关闭客户到服务器的数据传送。</li><li>（2） 服务器收到这个FIN，它发回一个ACK，确认序号为收到的序号加1。和SYN一样，一个FIN将占用一个序号。</li><li>（3） 服务器关闭客户端的连接，发送一个FIN给客户端。</li><li>（4） 客户端发回ACK报文确认，并将确认序号设置为收到序号加1。</li></ul></li></ul><p><img src="四次挥手.png" alt="四次挥手"></p><p>说明：</p><p>​    使用tcp来实现数据的发送和接收需要发送方和接收方，但是两个通信实体之间没有明确的客户端和服务端之分，在两个通信实体建立连接之前，必须有一个通信实体做出主动姿态，被称为客户端</p></blockquote><h5 id="4-2-Socket通信"><a href="#4-2-Socket通信" class="headerlink" title="4.2  Socket通信"></a>4.2  Socket通信</h5><p>​    Socket是应用层与TCP/IP协议族通信的中间软件抽象层，它是一组接口。在设计模式中，Socket其实就是一个门面模式，它把复杂的TCP/IP协议族隐藏在Socket接口后面，对用户来说，一组简单的接口就是全部，让Socket去组织数据，以符合指定的协议。Socket:套接字，作用：可以发送和接收数据</p><blockquote><p>Socket必须知道目标计算机的ip地址，端口号，指定协议类型【TCP】</p><p><img src="tcp通信.png" alt="tcp通信"></p><p>注意：</p><p>a.同一个端口号，如果被一个socket绑定之后，则其他的socket将不能再绑定</p><p>b.tcp创建连接的是双向通道，谁先发消息，则默认为是客户端，另外一方位服务端</p></blockquote><h4 id="5-UDP协议"><a href="#5-UDP协议" class="headerlink" title="5.UDP协议"></a>5.UDP协议</h4><blockquote><p>User Datagram Protocol,用户数据包协议，提供面向无连接的不可靠的信息传输服务</p><p>特点：</p><p>​    a.不安全【发送方只负责将信息发送出去，数据能不能到达对方，或者到达对方的信息是否正确，都不做任何保证】</p><p>​    b.无连接的【进行信息发送之前，无需进行发送方和接收方之间的连接】</p><p>​    c.速度快</p><p>​    d.大小是有限制的，每个数据包的大小必须限制在64k以内</p><p><img src="udp.png" alt="udp"></p></blockquote><h2 id="二、高阶函数"><a href="#二、高阶函数" class="headerlink" title="二、高阶函数"></a>二、高阶函数</h2><p>如果一个函数的参数是另外一个函数，那么这个函数就可以称为高阶函数</p><h2 id="2-1-map"><a href="#2-1-map" class="headerlink" title="2.1 map"></a>2.1 map</h2><p>map是系统内置函数，map函数接收两个参数，一个是函数，一个是可迭代对象(Iterable)，map将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">map(function,iterable)</span></span><br><span class="line"><span class="string">参数1：function，函数,函数的参数个数取决于后面序列的个数</span></span><br><span class="line"><span class="string">参数2：iterable，一个序列或多个序列</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">功能：将传入的函数依次作用于序列中的每一个元素，并把结果作为新的Iterator返回</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment">#1.传入函数一个参数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span>  x ** <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#需求：获取一个列表中每个元素的平方，生成一个新的列表</span></span><br><span class="line">l1 = map(fun,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">print(l1)   <span class="comment">#&lt;map object at 0x000001E86D3DA6D8&gt; #返回的是迭代器</span></span><br><span class="line">print(list(l1))  <span class="comment">#[1, 4, 9, 16]  #将迭代器转换为迭代对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#传入函数2个参数</span></span><br><span class="line">l1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">l2 = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mul</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x * y</span><br><span class="line"><span class="comment">#注意如果两个列表长度不一样，以短的为主计算，函数是平行取值，也就是说x取l1的值，y取l2的值</span></span><br><span class="line">gen1 = map(mul,l1,l2)  <span class="comment">#可以使用lambda表达式</span></span><br><span class="line">print(list(gen1))  <span class="comment">#[2, 6, 12, 20]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#提取字典的键</span></span><br><span class="line">gen3 = map(<span class="keyword">lambda</span> x:int(x),&#123;<span class="string">'1'</span>:<span class="number">10</span>,<span class="string">'2'</span>:<span class="number">20</span>&#125;)</span><br><span class="line">print(list(gen3)) <span class="comment">#[1,2]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#元组</span></span><br><span class="line">gen4 = map(<span class="keyword">lambda</span> x,y:(x,y),[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">print(list(gen4))  <span class="comment">#[(1, 1), (2, 2), (3, 3)]</span></span><br></pre></td></tr></table></figure><h2 id="2-2-reduce"><a href="#2-2-reduce" class="headerlink" title="2.2 reduce"></a>2.2 reduce</h2><p>reduce()函数也是functools模块中的一个高阶函数。需要引入functools模块才能使用。</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">'''</span><br><span class="line">functools.reduce(f, iterable[, initializer])</span><br><span class="line">参数1：函数，这个函数需要两个参数。</span><br><span class="line">参数2：可迭代对象</span><br><span class="line">参数3：可选，是默认值</span><br><span class="line">返回值：f函数计算的结果</span><br><span class="line">'''</span><br><span class="line">from functools import reduce</span><br><span class="line">#1.累加求和</span><br><span class="line">def add(x,y)</span><br><span class="line"><span class="code">    return x + y</span></span><br><span class="line">print(reduce(f,[1,2,3,4,5],5))</span><br><span class="line">计算过程：</span><br><span class="line"><span class="code"> （1）a = f(1,2)  #将1赋值给x，2赋值给y</span></span><br><span class="line"><span class="code"> （2）a = f(a,3)  #a赋值给x，3赋值给y</span></span><br><span class="line"><span class="code"> （3）a = f(a,4)</span></span><br><span class="line"><span class="code">  (4）a = f(a,5)</span></span><br><span class="line"><span class="code">  (5）f(d,10) = 20</span></span><br><span class="line"></span><br><span class="line">#将序列变成整数</span><br><span class="line">print(reduce(lambda x,y:x*10+y,[9,0,7,8])) #9078</span><br></pre></td></tr></table></figure><h2 id="2-3-filter"><a href="#2-3-filter" class="headerlink" title="2.3 filter"></a>2.3 filter</h2><p>filter是内建函数，可以对可迭代对象进行过滤，去除不满足条件的元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">filter(function, iterable) </span><br><span class="line">参数： function 确定是否保留元素，为真保留，为假去除元素,function的值可以<span class="literal">None</span></span><br><span class="line">       iterable 可迭代对象</span><br><span class="line">返回值：一个新的迭代器或迭代对象</span><br><span class="line"><span class="comment">#1 过滤掉非字符串数据</span></span><br><span class="line">print(filter(<span class="keyword">lambda</span> x:isinstance(x,str),[<span class="string">'1'</span>,<span class="number">8</span>,<span class="string">'2'</span>,<span class="number">3</span>,<span class="literal">True</span>,<span class="number">0.9</span>])) </span><br><span class="line">等价于:</span><br><span class="line">  [s <span class="keyword">for</span> s <span class="keyword">in</span> [<span class="string">'1'</span>,<span class="number">8</span>,<span class="string">'2'</span>,<span class="number">3</span>,<span class="literal">True</span>,<span class="number">0.9</span>] <span class="keyword">if</span> isinstance(s,str)]</span><br><span class="line">  </span><br><span class="line"><span class="comment">#2 回文数</span></span><br><span class="line"><span class="comment">#回文数判断</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_palindrome</span><span class="params">(n)</span>:</span></span><br><span class="line">    l1 = list(str(n))  <span class="comment">#将数字转换为字符串，再将字符串转为列表</span></span><br><span class="line">    l2 = l1[::<span class="number">-1</span>] <span class="comment">#获取反向列表</span></span><br><span class="line">    <span class="keyword">if</span> l1 == l2:  <span class="comment">#列表比较,长度相同，每一个元素都相同则为真</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#找出1-1000内所有的回文数</span></span><br><span class="line">print(list(filter(is_palindrome,range(<span class="number">1</span>,<span class="number">1001</span>))))</span><br></pre></td></tr></table></figure><h2 id="2-4-sorted"><a href="#2-4-sorted" class="headerlink" title="2.4 sorted"></a>2.4 sorted</h2><p>sorted是内建函数，用于对有序序列进行排序，生成一个新序列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sorted(iterable[, key=<span class="literal">None</span>][, reverse=<span class="literal">False</span>]) </span><br><span class="line">参数：iterable  排序对象，可以列表、元组、字符串等有序序列</span><br><span class="line">      key 一个函数，作用于序列的每一个元素，根据函数返回值进行排序，</span><br><span class="line">           具体的函数的参数就是取自于可迭代对象中，</span><br><span class="line">      reverse 默认从小到大排序，如果reverse为<span class="literal">True</span>则从大到小排序</span><br><span class="line">返回值： 新的序列</span><br><span class="line"><span class="comment">#字符串排序</span></span><br><span class="line">print(sorted([<span class="string">'bob'</span>, <span class="string">'about'</span>, <span class="string">'Zoo'</span>, <span class="string">'Credit'</span>], key=str.lower)) <span class="comment">#指定把元素变为小写后再排序</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#多维数据排序</span></span><br><span class="line">l=[(<span class="string">'a'</span>, <span class="number">1</span>), (<span class="string">'b'</span>, <span class="number">2</span>), (<span class="string">'c'</span>, <span class="number">6</span>), (<span class="string">'d'</span>, <span class="number">4</span>), (<span class="string">'e'</span>, <span class="number">3</span>)]</span><br><span class="line">print(sorted(l,key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>]))  <span class="comment">#使用元组的第二个元素排序</span></span><br><span class="line"></span><br><span class="line">students = [&#123;<span class="string">'name'</span>:<span class="string">'abc'</span>,<span class="string">'gender'</span>:<span class="string">'男'</span>,<span class="string">'age'</span>:<span class="number">23</span>&#125; ,</span><br><span class="line">            &#123;<span class="string">'name'</span>: <span class="string">'kkd'</span>, <span class="string">'gender'</span>: <span class="string">'男'</span>, <span class="string">'age'</span>: <span class="number">19</span>&#125; ,</span><br><span class="line">            &#123;<span class="string">'name'</span>: <span class="string">'ccxsbc'</span>, <span class="string">'gender'</span>: <span class="string">'男'</span>, <span class="string">'age'</span>: <span class="number">20</span>&#125;]</span><br><span class="line">print(sorted(students,key=<span class="keyword">lambda</span> elem:elem[<span class="string">'age'</span>]))  <span class="comment">#指定用age排序</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;计算机之间的通信，三次握手，四次挥手！TCP/UDP协议！&lt;/p&gt;
&lt;h2 id=&quot;17-网络编程&quot;&gt;&lt;a href=&quot;#17-网络编程&quot; class=&quot;headerlink&quot; title=&quot;17 网络编程&quot;&gt;&lt;/a&gt;17 网络编程&lt;/h2&gt;&lt;h2 id=&quot;一、网络编程&quot;&gt;
      
    
    </summary>
    
      <category term="web" scheme="https://addyzk.github.io/categories/web/"/>
    
    
      <category term="web" scheme="https://addyzk.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Git!</title>
    <link href="https://addyzk.github.io/2018/04/23/git/"/>
    <id>https://addyzk.github.io/2018/04/23/git/</id>
    <published>2018-04-23T12:11:14.000Z</published>
    <updated>2019-05-17T09:57:30.157Z</updated>
    
    <content type="html"><![CDATA[<p>Git 的基本认识，常用命令，以及使用流程，冲突管理分支管理等。</p><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h3 id="1-git简介"><a href="#1-git简介" class="headerlink" title="1.git简介"></a>1.git简介</h3><p><img src="git.png" alt="image"><br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>workspace 工作区</span><br><span class="line"><span class="bullet">- </span>index 暂存区</span><br><span class="line"><span class="bullet">- </span>repository 本地版本库</span><br><span class="line"><span class="bullet">- </span>remote 远程仓库</span><br></pre></td></tr></table></figure></p><h3 id="2-常用git命令"><a href="#2-常用git命令" class="headerlink" title="2.常用git命令"></a>2.常用git命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">所有的git命令必须在工作区内能使用，工作区就是你的项目目录</span><br></pre></td></tr></table></figure><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">   -<span class="ruby"> git --version 查看版本</span></span><br><span class="line"><span class="ruby">   - .gitignore  文件可以过滤不想提交的文件夹或文件</span></span><br><span class="line"><span class="ruby">- git config -l 查看配置信息</span></span><br><span class="line"><span class="ruby">- 修改name和email </span></span><br><span class="line"><span class="ruby">    - git config --global user.name <span class="string">'ddd'</span></span></span><br><span class="line"><span class="ruby">    - git config --global user.email <span class="string">'ddd@jdjdjd.com'</span></span></span><br><span class="line"><span class="ruby">    - git config --global push.default matching</span></span><br><span class="line"><span class="ruby">- 克隆版本库  </span></span><br><span class="line"><span class="ruby">    - git clone 版本库地址     将远端服务上的项目克隆到本地</span></span><br><span class="line"><span class="ruby">- 创建版本库 </span></span><br><span class="line"><span class="ruby">    - git init   初始化一个新的项目 ，必须切换到版本库所在目录 </span></span><br><span class="line"><span class="ruby">- 将文件添加到暂存区</span></span><br><span class="line"><span class="ruby">    - git add 文件名     将指定文件添加到暂存区</span></span><br><span class="line"><span class="ruby">    - git add .          将所有文件添加到暂存区</span></span><br><span class="line"><span class="ruby">    - git reset HEAD &lt;file&gt;  撤销暂存区的修改</span></span><br><span class="line"><span class="ruby">- 查看修改</span></span><br><span class="line"><span class="ruby">    - git diff</span></span><br><span class="line"><span class="ruby">- 提交代码到版本库</span></span><br><span class="line"><span class="ruby">    -  git commit &lt;文件名&gt;    -m <span class="string">"说明信息"</span></span></span><br><span class="line"><span class="ruby">    -  git commit -a -m    提交所有文件</span></span><br><span class="line"><span class="ruby">- 将本地代码推送到远端托管服务器</span></span><br><span class="line"><span class="ruby">    - git push [origin master] 默认推送到主分支</span></span><br><span class="line"><span class="ruby">    - git push origin 分支名     推送到指定分支</span></span><br><span class="line"><span class="ruby">- 从远端服务器拉取内容</span></span><br><span class="line"><span class="ruby">    - git pull origin 分支名</span></span><br><span class="line"><span class="ruby">    - --allow-unrelated-histories  解决本地和远程库不同的问题</span></span><br><span class="line"><span class="ruby">- 删除或恢复文件</span></span><br><span class="line"><span class="ruby">    - git rm &lt;file&gt;  从版本库中删除文件</span></span><br><span class="line"><span class="ruby">    - git checkout -- &lt;file&gt; 从版本库中恢复一个文件</span></span><br><span class="line"><span class="ruby">- 查看版本库状态</span></span><br><span class="line"><span class="ruby">    - git status</span></span><br><span class="line"><span class="ruby">- 查看提交记录</span></span><br><span class="line"><span class="ruby">    - git log</span></span><br><span class="line"><span class="ruby">    - git log --pretty=oneline</span></span><br><span class="line"><span class="ruby">      -版本回退</span></span><br><span class="line"><span class="ruby">    - git reset --hard head~n</span></span><br><span class="line"><span class="ruby">        - head~ 上一个版本</span></span><br><span class="line"><span class="ruby">        - head~~上两个版本</span></span><br><span class="line"><span class="ruby">        - head~n 上n版本</span></span><br><span class="line"><span class="ruby">    - git reset --hard 版本号</span></span><br><span class="line"><span class="ruby">    - git reflog 查看每个版本的版本号</span></span><br></pre></td></tr></table></figure><h3 id="3-git使用流程"><a href="#3-git使用流程" class="headerlink" title="3.git使用流程"></a>3.git使用流程</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> 首先到托管服务器上创建一个空版本库，例如在github、coding、oschina等</span></span><br><span class="line"><span class="ruby">- 然后克隆到本地(clone)创建一个新项目</span></span><br><span class="line"><span class="ruby">- 或者可以通过初始化项目创建一个新项目 git init</span></span><br><span class="line"><span class="ruby">    - git remote add origin 远程仓库地址 </span></span><br><span class="line"><span class="ruby">- 添加代码文件（git add)</span></span><br><span class="line"><span class="ruby">- 提交代码到本地库 git commit -m</span></span><br><span class="line"><span class="ruby">- 将代码推送到远端服务器 git push</span></span><br><span class="line"><span class="ruby">- 从远端服务器拉取代码git  pull</span></span><br></pre></td></tr></table></figure><h4 id="4-冲突管理"><a href="#4-冲突管理" class="headerlink" title="4 冲突管理"></a>4 冲突管理</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>如果有多个人同时修改同一个文件的相同行，在推送时会有冲突</span><br><span class="line"><span class="bullet">- </span>发生冲突后，首先将服务器端代码拉到本地（pull），手动合并冲突</span><br><span class="line"><span class="bullet">- </span>然后添加修改后的代码文件，重新提交</span><br><span class="line"><span class="bullet">- </span>将代码推送到服务器</span><br></pre></td></tr></table></figure><h4 id="5-分支管理"><a href="#5-分支管理" class="headerlink" title="5 分支管理"></a>5 分支管理</h4><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> master 主分支，记录发布版本</span></span><br><span class="line"><span class="ruby">- online 线上分支 正在运行的版本</span></span><br><span class="line"><span class="ruby">- develop 开发分支 用于测试</span></span><br><span class="line"><span class="ruby">- local 本地分支</span></span><br><span class="line"><span class="ruby">- 分支管理常用命令</span></span><br><span class="line"><span class="ruby">    - git branch 查看分支</span></span><br><span class="line"><span class="ruby">    - git branch 新分支 [旧分支]    基于旧分支创建新分支</span></span><br><span class="line"><span class="ruby">    - git branch -d 分支名      删除分支</span></span><br><span class="line"><span class="ruby">    - git checkout 分支           切换到指定分支</span></span><br><span class="line"><span class="ruby">    - git merge 分支名            将指定分支合并到当前分支</span></span><br></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> 忽略提交，在工作区中编写一个.gitignore文件，在文件中记录不需要提交的目录和文件</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">- 如果克隆的时候出现了： unable to access <span class="string">'https://git.coding.net/landmark/php1702.git/'</span>: error setting certificate 解决方式：</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">    - Git config --global http.sslVerify <span class="literal">false</span> </span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">- 免密提交</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">    - <span class="number">1</span> 生成公钥对</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">        ~~~</span></span><br><span class="line"><span class="ruby">        cd   <span class="comment">#回到家目录</span></span></span><br><span class="line"><span class="ruby">        ssh-keygen -t rsa -C <span class="string">"自己的邮箱"</span></span></span><br><span class="line"><span class="ruby">        id_rsa 私钥  id_rsa.pub 公钥</span></span><br><span class="line"><span class="ruby">        ~~~</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">        </span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">    - <span class="number">2</span> 将公钥添加到码云服务器上</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">        ~~~</span></span><br><span class="line"><span class="ruby">        复制id_rsa.pub的内容</span></span><br><span class="line"><span class="ruby">        码云 ----&gt; 个人设置--&gt;ssh公钥，将复制的内容黏贴到“公钥内容”中</span></span><br><span class="line"><span class="ruby">        选中永久有效</span></span><br><span class="line"><span class="ruby">        添加</span></span><br><span class="line"><span class="ruby">        ~~~</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">    - <span class="number">3</span>.测试连接</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">        ~~~</span></span><br><span class="line"><span class="ruby">        ssh -T git@git.coding.net</span></span><br><span class="line"><span class="ruby">        </span></span><br><span class="line"><span class="ruby">        python@ubuntu<span class="symbol">:~/</span>.ssh$ ssh -T git@git.coding.net</span></span><br><span class="line"><span class="ruby">        <span class="symbol">Warning:</span> Permanently added the RSA host key <span class="keyword">for</span> IP address <span class="string">'123.59.83.79'</span> to the list of known hosts.</span></span><br><span class="line"><span class="ruby">        Coding 提示: Hello landmark, You<span class="string">'ve connected to Coding.net via SSH. This is a personal key.</span></span></span><br><span class="line"><span class="ruby">        landmark，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥 <span class="comment"># 表示通过</span></span></span><br><span class="line"><span class="ruby">        ~~~</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">        </span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">    - <span class="number">4</span> 使用项目的ssh地址，可以clone或init/remote add</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Git 的基本认识，常用命令，以及使用流程，冲突管理分支管理等。&lt;/p&gt;
&lt;h2 id=&quot;Git&quot;&gt;&lt;a href=&quot;#Git&quot; class=&quot;headerlink&quot; title=&quot;Git&quot;&gt;&lt;/a&gt;Git&lt;/h2&gt;&lt;h3 id=&quot;1-git简介&quot;&gt;&lt;a href=&quot;#1-
      
    
    </summary>
    
      <category term="git" scheme="https://addyzk.github.io/categories/git/"/>
    
    
      <category term="Git" scheme="https://addyzk.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>nginx、pyenv配置</title>
    <link href="https://addyzk.github.io/2017/05/17/nginx%E3%80%81pyenv%E9%85%8D%E7%BD%AE/"/>
    <id>https://addyzk.github.io/2017/05/17/nginx、pyenv配置/</id>
    <published>2017-05-17T12:42:20.000Z</published>
    <updated>2019-05-17T09:59:40.362Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、开机启动"><a href="#一、开机启动" class="headerlink" title="一、开机启动"></a>一、开机启动</h2><p>可以设置开机启动有两个地方：第一，在/etc/init.d目录下，可以将服务放到这个目录下。第二是在/etc/init.d下的rc.local，可以将需要开机启动的程序写入这个文件。可以使用sysv-rc-conf命令进行设置和查看开机启动服务。</p><ul><li><p>在/etc/init.d/下新建一个脚本test，格式如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#要执行的命令</span></span><br><span class="line"><span class="keyword">exit</span> <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><p>增加脚本可执行权限</p></li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x <span class="built_in">test</span></span><br></pre></td></tr></table></figure><ul><li><p>设置开机启动</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">update</span>-rc.d <span class="keyword">test</span> <span class="keyword">defaults</span> </span><br><span class="line"><span class="comment">#90是优先级，越大优先级越低，越晚执行</span></span><br></pre></td></tr></table></figure></li><li><p>使用sysv-rc-conf命令设置运行级别</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#sysv-rc-conf默认没有安装，首先安装</span></span><br><span class="line">sudo apt-<span class="keyword">get</span> install sysv-rc-conf</span><br><span class="line"></span><br><span class="line"><span class="meta">#执行命令sysv-rc-conf，用空格键选中或取消指定的运行级别。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#取消开机启动可以使用</span></span><br><span class="line">sudo update-rc.d -f 脚本名  remove</span><br></pre></td></tr></table></figure></li></ul><h2 id="二、防火墙"><a href="#二、防火墙" class="headerlink" title="二、防火墙"></a>二、防火墙</h2><p>UFW或Uncomplicated Firewall是iptables的接口，旨在简化配置防火墙的过程。UFW默认安装在Ubuntu上。如果没有安装，你可以使用sudo apt-get install ufw 。</p><ul><li><p>ufw常见操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status                 <span class="comment">#查看状态和规则</span></span><br><span class="line">sudo ufw <span class="built_in">disable</span>                <span class="comment">#禁用</span></span><br><span class="line">sudo ufw <span class="built_in">enable</span>                 <span class="comment">#启用</span></span><br><span class="line">sudo ufw reset                  <span class="comment">#重置</span></span><br><span class="line">sudo ufw status numbered        <span class="comment">#显示规则编号</span></span><br></pre></td></tr></table></figure></li><li><p>设置默认策略</p><p>如果您刚刚开始使用防火墙，则首先要定义的规则是您的默认策略。这些规则控制如何处理未明确匹配任何其他规则的流量。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw<span class="built_in"> default </span>deny<span class="built_in"> incoming </span>  #拒绝所有传入连接</span><br><span class="line">sudo ufw<span class="built_in"> default </span>allow outgoing  #允许所有传出连接</span><br></pre></td></tr></table></figure></li><li><p>开启或禁用指定连接</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#允许连接</span></span><br><span class="line">sudo ufw allow 端口/服务</span><br><span class="line"></span><br><span class="line"><span class="comment">#允许ssh远程连接</span></span><br><span class="line">sudo ufw allow ssh  <span class="comment">#或者sudo ufw allow 22/tcp  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#允许未加密的web访问</span></span><br><span class="line">sudo ufw allow <span class="keyword">http</span>  <span class="comment">#或sudo ufw allow 80</span></span><br><span class="line"><span class="comment">#允许加密的web访问</span></span><br><span class="line">sudo ufw allow <span class="keyword">https</span>  <span class="comment">#或sudo ufw allow 443</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#允许ftp访问</span></span><br><span class="line">sudo ufw allow <span class="keyword">ftp</span>  <span class="comment">#或sudo ufw allow 21/tcp</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#允许远程mysql访问</span></span><br><span class="line">sudo ufw allow <span class="number">3306</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#允许特定范围的端口</span></span><br><span class="line">sudo ufw allow <span class="number">6000</span>:<span class="number">6007</span>/tcp <span class="comment">#允许使用端口6000 - 6007 X11连接</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#允许特定ip地址</span></span><br><span class="line">sudo ufw allow <span class="built_in">from</span> <span class="number">15.15</span><span class="number">.15</span><span class="number">.51</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#允许特定子网</span></span><br><span class="line">sudo ufw allow <span class="built_in">from</span> <span class="number">15.15</span><span class="number">.15</span><span class="number">.0</span>/<span class="number">24</span>  <span class="comment">#允许所有的IP地址范围从15.15.15.1到15.15.15.254</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#拒绝连接</span></span><br><span class="line">sudo ufw deny <span class="keyword">http</span></span><br><span class="line">sudo ufw deny <span class="built_in">from</span> <span class="number">15.15</span><span class="number">.15</span><span class="number">.51</span></span><br></pre></td></tr></table></figure></li><li><p>删除规则</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status numbered <span class="comment">#先查看编号</span></span><br><span class="line">sudo ufw <span class="keyword">delete</span> <span class="number">2</span>  <span class="comment">#再按编号删除</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按实际规则</span></span><br><span class="line">sudo ufw <span class="keyword">delete</span> <span class="keyword">allow</span> <span class="keyword">http</span></span><br><span class="line">sudo ufw <span class="keyword">delete</span> <span class="keyword">allow</span> <span class="number">80</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="三、nginx环境搭建"><a href="#三、nginx环境搭建" class="headerlink" title="三、nginx环境搭建"></a>三、nginx环境搭建</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">安装nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1 更新软件列表</span></span><br><span class="line"></span><br><span class="line">sudo apt-<span class="builtin-name">get</span> update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2 安装</span></span><br><span class="line"></span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3 启动服务</span></span><br><span class="line"></span><br><span class="line">sudo  /etc/init.d/ngin start  # start | restart | stop</span><br><span class="line">或</span><br><span class="line">service nginx start | restart | stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置虚拟站点</span></span><br><span class="line"></span><br><span class="line">cd /etc/nginx/sites-available</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.复制虚拟站点配置模板，生成自己虚拟站点的配置文件</span></span><br><span class="line"></span><br><span class="line">sudo cp<span class="built_in"> default </span>www.blog.com.conf  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 5 编辑模板</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------以下为配置内容-------------------</span></span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen 80; #监听端口</span><br></pre></td></tr></table></figure><p>   #站点的根目录<br>    root /var/www/html/<a href="http://www.blog.com" target="_blank" rel="noopener">www.blog.com</a>;</p><pre><code># Add index.php to the list if you are using PHP#网站默认首页打开顺序index index.html index.htm; #站点名称，可以有多个名称，中间用空格隔开server_name www.blog.com blog.com; </code></pre><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta"># ------------------到此结束------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 这个模板比较简单，如果有复杂的要求，请以此为基础进行改进</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 6 保存退出</span></span><br><span class="line"></span><br><span class="line">:wq</span><br><span class="line"></span><br><span class="line"><span class="meta"># 7 切换到sites-enabled目录下，创建软连接</span></span><br><span class="line"></span><br><span class="line">cd ../sites-enabled</span><br><span class="line">sudo ln -s <span class="meta-keyword">/etc/</span>nginx<span class="meta-keyword">/sites-available/</span>www.blog.com.con   www.blog.com.conf</span><br><span class="line"></span><br><span class="line"><span class="meta"># 8 重启nginx服务</span></span><br><span class="line"></span><br><span class="line">sudo service nginx restart  (start/stop)</span><br><span class="line">或者</span><br><span class="line">sudo <span class="meta-keyword">/etc/</span>init.d/nginx restart</span><br><span class="line"></span><br><span class="line"><span class="meta"># 8 切换到站点根目录(根据你自己的设定进行)，我假定站点根目录是/var/www</span></span><br><span class="line"></span><br><span class="line">cd <span class="meta-keyword">/var/</span>www</span><br><span class="line">sudo chmod -R <span class="number">755</span> blog</span><br><span class="line"></span><br><span class="line"><span class="meta"># 编辑index.html</span></span><br><span class="line"></span><br><span class="line"><span class="params">&lt;html&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="params">&lt;head&gt;</span></span><br><span class="line"><span class="params">&lt;meta charset='utf<span class="number">-8</span>'&gt;</span></span><br><span class="line"><span class="params">&lt;title&gt;</span>疯狂程序员的博客<span class="params">&lt;/title&gt;</span></span><br><span class="line"><span class="params">&lt;/head&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="params">&lt;body&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="params">&lt;h1&gt;</span>疯狂的程序员<span class="params">&lt;/h1&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="params">&lt;/body&gt;</span></span><br><span class="line"><span class="params">&lt;/html&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 保存退出</span></span><br><span class="line"></span><br><span class="line">:wq</span><br><span class="line"></span><br><span class="line"><span class="meta"># 9 切换到windows系统下，编辑C:\Windows\System32\drivers\etc\hosts文件，在末尾增加：</span></span><br><span class="line"></span><br><span class="line">ip为你虚拟机的ip地址</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">192<span class="selector-class">.168</span><span class="selector-class">.48</span><span class="selector-class">.3</span>  <span class="selector-tag">www</span><span class="selector-class">.blog</span><span class="selector-class">.com</span>`   </span><br><span class="line"></span><br><span class="line">`10 在<span class="selector-tag">windows</span>系统下浏览器里输入 :  <span class="selector-tag">www</span><span class="selector-class">.blog</span><span class="selector-class">.com</span>`</span><br><span class="line"></span><br><span class="line">`看看是否是你的页面`</span><br></pre></td></tr></table></figure><h2 id="四、下载"><a href="#四、下载" class="headerlink" title="四、下载"></a>四、下载</h2><ul><li><p>wget  wget命令用来从指定的URL下载文件。wget非常稳定，它在带宽很窄的情况下和不稳定网络中有很强的适应性，如果是由于网络的原因下载失败，wget会不断的尝试，直到整个文件下载完毕。如果是服务器打断下载过程，它会再次联到服务器上从停止的地方继续下载。这对从那些限定了链接时间的服务器上下载大文件非常有用。</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用wget -c重新启动下载中断的文件，对于我们下载大文件时突然由于网络等原因中断非常有帮助，我们可以继续接着下载而不是重新下载一个文件。需要继续中断的下载时可以使用-c参数。</span></span><br><span class="line">sudo wget -c <span class="symbol">http:</span>/<span class="regexp">/mirrors.sohu.com/python</span><span class="regexp">/3.6.4/</span>Python-<span class="number">3.6</span>.<span class="number">4</span>.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="comment">#-P 将下载文件存到指定目录</span></span><br><span class="line">sudo wget -c <span class="symbol">http:</span>/<span class="regexp">/mirrors.sohu.com/python</span><span class="regexp">/3.6.4/</span>Python-<span class="number">3.6</span>.<span class="number">4</span>.tar.xz -P ~<span class="regexp">/  #下载保存到家目录</span></span><br></pre></td></tr></table></figure></li><li><p>curl</p><p>curl命令是一个利用URL规则在命令行下工作的文件传输工具。它支持文件的上传和下载，所以是综合传输工具，但按传统，习惯称curl为下载工具。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -O http:<span class="regexp">//mi</span>rrors.sohu.com<span class="regexp">/python/</span><span class="number">3.6</span>.<span class="number">4</span><span class="regexp">/Python-3.6.4.tar.xz</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="五、python开发环境配置"><a href="#五、python开发环境配置" class="headerlink" title="五、python开发环境配置"></a>五、python开发环境配置</h2><p>Python 2和Python 3之间存在着较大的差异，并且，由于各种原因导致了Python 2和Python 3的长期共存。在实际工作过程中，我们可能会同时用到Python 2和Python 3，因此，也需要经常在Python 2和Python 3之间进行来回切换。这就需要对python的版本进行管理，除此之外还需要对不同的软件包进行管理。大部分情况下，对于开源的库我们使用最新版本即可。但是，有时候可能需要对相同的Python版本，在不同的项目中使用不同版本的软件包。</p><p>在这里，我们要使用两个工具：pyenv和virtualenv。前者用于管理不同的Python版本，后者用于管理不同的工作环境。有了这两个工具，Python相关的版本问题将不再是问题。</p><h3 id="5-1-pyenv"><a href="#5-1-pyenv" class="headerlink" title="5.1 pyenv"></a>5.1 pyenv</h3><p>pyenv是一个Python版本管理工具，它能够进行全局的Python版本切换，也可以为单个项目提供对应的Python版本。使用pyenv以后，可以在服务器上安装多个不同的Python版本，也可以安装不同的Python实现。不同Python版本之间的切换也非常简单。pyenv官方地址<a href="https://github.com/pyenv/pyenv-installer" target="_blank" rel="noopener">https://github.com/pyenv/pyenv-installer</a></p><ul><li>安装pyenv</li></ul><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1 安装pyenv，在命令行下键入：</span></span><br><span class="line">$ curl -L https:<span class="string">//github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer</span> | bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#默认安装到当前用户的工作目录下的.pyenv，我们可以查看一下</span></span><br><span class="line">$ <span class="keyword">cd</span> ~</span><br><span class="line">$ <span class="keyword">ls</span> -la</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果安装过git，也可以使用以下安装方式安装</span></span><br><span class="line"> $ git clone https:<span class="string">//github.com/pyenv/pyenv.git</span> ~<span class="string">/.pyenv</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2 将安装路径写入~/.bashrc</span></span><br><span class="line">将以下三条语句写入 ~<span class="string">/.bashrc</span>  </span><br><span class="line">export PATH=<span class="string">"/home/zhu/.pyenv/bin:$PATH"</span></span><br><span class="line">eval <span class="string">"$(pyenv init -)"</span></span><br><span class="line">eval <span class="string">"$(pyenv virtualenv-init -)"</span></span><br><span class="line"></span><br><span class="line">$ source  ~<span class="string">/.bashrc</span>  <span class="comment">#配置立刻生效</span></span><br><span class="line"></span><br><span class="line">$ <span class="keyword">echo</span> $PATH</span><br><span class="line"><span class="comment">#如果路径第一个结尾是shims则表示成功</span></span><br><span class="line"><span class="string">/home/python/.pyenv/plugins/pyenv-virtualenv/shims</span>:<span class="string">/home/python/.pyenv/shims</span>:<span class="string">/home/python/.pyenv/bin</span>:<span class="string">/home/python/bin</span>:<span class="string">/home/python/.local/bin</span>:<span class="string">/usr/local/sbin</span>:<span class="string">/usr/local/bin</span>:<span class="string">/usr/sbin</span>:<span class="string">/usr/bin</span>:<span class="string">/sbin</span>:<span class="string">/bin</span>:<span class="string">/usr/games</span>:<span class="string">/usr/local/games</span>:<span class="string">/snap/bin</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#也可以将上面三条命令写入到~/.barsh_profile，然后重启一下shell</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#3 更新一下</span></span><br><span class="line">$ pyenv update</span><br></pre></td></tr></table></figure><ul><li><p>使用pyenv</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.查看pyenv当前支持哪些Python版本</span></span><br><span class="line">python@ubuntu:~$ pyenv install --list</span><br><span class="line">Available versions:</span><br><span class="line">  2.1.3</span><br><span class="line">  2.2.3</span><br><span class="line">  2.3.7</span><br><span class="line">  <span class="built_in">..</span>.</span><br><span class="line">  </span><br><span class="line"><span class="comment">#2.列出pyenv中所有可用的python版本</span></span><br><span class="line">python@ubuntu:~$ pyenv versions</span><br><span class="line">  system</span><br><span class="line">  3.5.4</span><br><span class="line">* 3.6.4 (<span class="builtin-name">set</span> by /home/python/.pyenv/version)  # *表示当前使用的3.6.4版本</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.选择指定的python版本</span></span><br><span class="line">python@ubuntu:~$ pyenv global 3.5.4  #设置指定的版本</span><br><span class="line">python@ubuntu:~$ python  </span><br><span class="line">Python 3.5.4 (default, Mar 29 2018, 11:02:03)  #已经切换到了3.5.4</span><br><span class="line">[GCC 5.4.0 20160609] on linux</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> <span class="keyword">or</span> <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">切换Python版本以后，与版本相关的依赖也会一起切换。因此，我们不用担心不同的版本在系统中是否会相互干扰。</span><br><span class="line"></span><br><span class="line"><span class="comment">#4. 删除指定python版本</span></span><br><span class="line">python@ubuntu:~$ pyenv uninstall 3.5.4</span><br><span class="line">pyenv: <span class="builtin-name">remove</span> /home/python/.pyenv/versions/3.5.4? y</span><br><span class="line">python@ubuntu:~$ pyenv versions</span><br><span class="line">  system</span><br><span class="line">* 3.6.4 (<span class="builtin-name">set</span> by /home/python/.pyenv/version)</span><br></pre></td></tr></table></figure></li><li><p>安装python</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">1.在安装python之前，我们必须要安装python所需要的依赖包，这个必须要安装，安装会失败的：</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install libc6-dev gcc</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">2. 安装python</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pyenv install 3.6.4 -v  <span class="comment">#-v 以日志模式显示安装过程</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">因为pyenv会自动到github上下载，速度超慢，所以一般会选择使用curl或者wget下载到~/.pyenv/cache下，然后再用pyenv安装，下面是可选的安装模式</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/.pyenv</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo mkdir cache</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget -c http://mirrors.sohu.com/python/3.6.4/Python-3.6.4.tar.xz -P  ~/.pyenv/cache/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pyenv install 3.6.4 -v</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">3.更新pyenv数据库</span></span><br><span class="line"><span class="meta"> $</span><span class="bash"> pyenv <span class="built_in">rehash</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">4.列出所安装的python版本</span></span><br><span class="line"><span class="meta">  $</span><span class="bash"> pyenv versions</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">5.切换python版本</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pyenv  global 3.6.4</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">6.验证版本</span></span><br><span class="line"><span class="meta"> $</span><span class="bash"> python</span></span><br></pre></td></tr></table></figure></li><li><p>注意：</p><ul><li>使用pyenv管理python，必须是用pyenv安装的python才行，系统以前有的，需要重新用pyenv安装</li><li>使用pip安装第三方模块时会安装到~/.pyenv/versions/xxx下，不会和系统模块发生冲突；</li><li>使用pip安装模块后，可能需要执行pyenv rehash更新数据库。</li></ul></li></ul><h3 id="5-2-virtualenv"><a href="#5-2-virtualenv" class="headerlink" title="5.2 virtualenv"></a>5.2 virtualenv</h3><p>virtualenv本身是一个独立的项目，用以隔离不同项目的工作环境。例如，项目A和项目B都是使用Python 2.7.13，但是，项目A需要使用Flask 0.8版本，项目B需要使用Flask 0.9版本。我们只要组合pyenv和virtualenv这两个工具，就能够构造Python和第三方库的任意版本组合，拥有了很好的灵活性，也避免了项目之间的相互干扰。</p><p>virtualenv本身是一个独立的工具，用户可以不使用pyenv单独使用virtualenv。但是，如果你使用了pyenv，就需要安装pyenv-virtualenv插件而不是virtualenv软件来使用virtualenv的功能。</p><p>项目主页：<a href="https://github.com/yyuu/pyenv-virtualenv" target="_blank" rel="noopener">https://github.com/yyuu/pyenv-virtualenv</a></p><ul><li><p>安装virtualenv（可选）</p><p>如果是python3以上，安装完pyth就已经安装了virtualenv，就不用安装了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装</span></span><br><span class="line">$ pip <span class="keyword">install</span> virtualenv</span><br><span class="line"></span><br><span class="line"><span class="comment">#或者，如果提示版本不匹配，可以使用--upgrade参数</span></span><br><span class="line">$ sudo pip <span class="keyword">install</span> <span class="comment">--upgrade virtualenv</span></span><br></pre></td></tr></table></figure></li><li><p>使用virtualenv创建项目的虚拟环境</p></li></ul><p><strong>一个项目创建一个virtualenv的虚拟环境</strong>，在这个环境中，可以用pip安装项目所需的库，不会影响其他项目。切记一个项目一个虚拟环境，否则可能会发生莫名的错误。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.首先创建项目目录</span></span><br><span class="line">$ sudo mkdir -p myproject/blog</span><br><span class="line">cd myproject/blog</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.创建项目的虚拟环境</span></span><br><span class="line"><span class="comment">#用法：pyenv virtualenv python版本号 虚拟环境名</span></span><br><span class="line">$ pyenv virtualenv 3.6.4 env36   #注意版本号必须是已经安装的，否则会报错</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.切换到虚拟环境 </span></span><br><span class="line">python@ubuntu:/myproject/blog$ pyenv activate env36</span><br><span class="line"></span><br><span class="line">pyenv-virtualenv: prompt changing will be removed <span class="keyword">from</span> future release. configure `<span class="builtin-name">export</span> <span class="attribute">PYENV_VIRTUALENV_DISABLE_PROMPT</span>=1' <span class="keyword">to</span> simulate the behavior.</span><br><span class="line"></span><br><span class="line">(env36) python@ubuntu:/myproject/blog$  # (env36)表示该项目处于虚拟环境中</span><br><span class="line"></span><br><span class="line"><span class="comment">#验证</span></span><br><span class="line">(env36) python@ubuntu:/myproject/blog$ python</span><br><span class="line">Python 3.6.4 (default, Mar 29 2018, 10:33:37) </span><br><span class="line">[GCC 5.4.0 20160609] on linux</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> <span class="keyword">or</span> <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line"></span><br><span class="line"><span class="comment">#4. 切出虚拟环境</span></span><br><span class="line">(env36) python@ubuntu:/myproject/blog$ pyenv deactivate env36</span><br></pre></td></tr></table></figure><p>1、安装  virtualenvwrapper</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip3 <span class="keyword">install</span> virtualenv</span><br><span class="line"></span><br><span class="line">pip3 <span class="keyword">install</span> virtualenvwrapper</span><br></pre></td></tr></table></figure><p> 2、新建虚拟环境文件夹</p><figure class="highlight plain"><figcaption><span>y</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/PyEnv</span><br></pre></td></tr></table></figure><p>3、设置环境变量</p><pre><code>在使用virtualenvwrapper之前，要运行virtualenvwrapper.sh文件，需要设置环境变量， vim进入~/.bash_profile，插入</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> WORKON_HOME=~/PyEnv</span><br><span class="line"><span class="built_in">source</span> /usr/<span class="built_in">local</span>/bin/virtualenvwrapper.sh     //virtualenvwrapper.sh   所在目录</span><br></pre></td></tr></table></figure><p>4、执行3步骤，若提示</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">If Python could<span class="built_in"> not </span>import the module virtualenvwrapper.hook_loader,</span><br><span class="line">check that virtualenvwrapper has been installed for</span><br><span class="line">VIRTUALENVWRAPPER_PYTHON=/usr/bin/python<span class="built_in"> and </span>that PATH is</span><br><span class="line">set properly.</span><br></pre></td></tr></table></figure><p>在bash_profile中 加入</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export VIRTUALENVWRAPPER_PYTHON=<span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>python3   <span class="regexp">//</span>python3   所在目录</span><br></pre></td></tr></table></figure><p>5、至此mkvirtualenv、workon命令即可使用</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>列出所有虚拟环境 workon</span><br><span class="line"><span class="bullet">* </span>创建基本环境 mkvirtualenv [环境名]</span><br><span class="line"><span class="bullet">* </span>激活环境 workon [环境名]</span><br><span class="line"><span class="bullet">* </span>退出环境 deactivate [环境名]</span><br><span class="line"><span class="bullet">* </span>删除环境 rmvirtualenv [环境名]</span><br></pre></td></tr></table></figure><ul><li>使用pip下载库</li></ul><p>使用pip下载，会从国外的网站下载，速度超慢，所以要切换pip到国内的镜像源，一般会用psm切换pip的源</p><ul><li><p>1.安装一个软件psm</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(bbs36)python<span class="variable">@ubuntu</span><span class="symbol">:/myproject/blog</span><span class="variable">$ </span>pip install psm</span><br><span class="line">[sudo] python 的密码： </span><br><span class="line">正在读取软件包列表... 完成</span><br><span class="line">正在分析软件包的依赖关系树       </span><br><span class="line">正在读取状态信息... 完成       </span><br><span class="line"><span class="symbol">E:</span> 无法定位软件包 psm</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>2.psm的使用<br>以下操作需要在虚拟环境外进行，选择好镜像源后在进入虚拟环境</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.查看列出pip的镜像源</span></span><br><span class="line">(bbs36)python@ubuntu:/myproject/blog$ psm ls</span><br><span class="line"></span><br><span class="line">pypi  https://pypi.python.org/simple/</span><br><span class="line">douban  http://pypi.douban.com/simple/</span><br><span class="line">aliyun  http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前的镜像源</span></span><br><span class="line">(bbs36)python@ubuntu:/myproject/blog$ psm <span class="keyword">show</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Current</span> <span class="keyword">source</span> <span class="keyword">is</span> douban</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.选择指定的镜像源</span></span><br><span class="line"></span><br><span class="line">(bbs36)python@ubuntu:/myproject/blog$ psm <span class="keyword">use</span> douban</span><br><span class="line"></span><br><span class="line"><span class="keyword">Source</span> <span class="keyword">is</span> <span class="keyword">changed</span> <span class="keyword">to</span> douban.</span><br><span class="line"></span><br><span class="line"><span class="comment">#3 使用pip下载库</span></span><br><span class="line">(bbs36) python@ubuntu:/myproject/blog$ pip <span class="keyword">install</span> pymysql</span><br></pre></td></tr></table></figure></li></ul><h2 id="六、pycharm和虚拟开发环境结合"><a href="#六、pycharm和虚拟开发环境结合" class="headerlink" title="六、pycharm和虚拟开发环境结合"></a>六、pycharm和虚拟开发环境结合</h2><p>1.创建一个新的工程，file-setting-&gt;project  interpreter ，点击右边的…按钮–&gt;show all</p><p><img src="QQ截图20180913160545.png" alt="QQ截图20180913160545"></p><p><img src="env.png" alt="env"></p><p>点击“+”，然后，在下图中选择Existing interperter后面的….</p><p><img src="QQ截图20180913155916.png" alt="QQ截图20180913155916"></p><ol start="2"><li><p>打开virtual enviroment   选择已经存在的虚拟开发环境. 在你的家目录下–&gt;.pyenv-&gt;versions –&gt; 你的虚拟开发环境名称–&gt;bin  选python</p><p><img src="QQ截图20180913160058.png" alt="QQ截图20180913160058"></p><p><img src="QQ截图20180913160400.png" alt="QQ截图20180913160400"></p><p><img src="QQ截图20180913160416.png" alt="QQ截图20180913160416"></p></li></ol><p>对已经存在的工程来说，file-&gt;settingd-&gt; project xxx –&gt;project interpreter  选择已经存在的虚拟开发环境i</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、开机启动&quot;&gt;&lt;a href=&quot;#一、开机启动&quot; class=&quot;headerlink&quot; title=&quot;一、开机启动&quot;&gt;&lt;/a&gt;一、开机启动&lt;/h2&gt;&lt;p&gt;可以设置开机启动有两个地方：第一，在/etc/init.d目录下，可以将服务放到这个目录下。第二是在/etc
      
    
    </summary>
    
      <category term="配置" scheme="https://addyzk.github.io/categories/%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="环境配置" scheme="https://addyzk.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>项目部署</title>
    <link href="https://addyzk.github.io/2017/04/27/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/"/>
    <id>https://addyzk.github.io/2017/04/27/项目部署/</id>
    <published>2017-04-27T11:36:50.000Z</published>
    <updated>2019-05-17T09:38:11.932Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、项目部署基本流程"><a href="#一、项目部署基本流程" class="headerlink" title="一、项目部署基本流程"></a>一、项目部署基本流程</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>虚拟环境</span><br><span class="line"><span class="bullet">- </span>数据库</span><br><span class="line"><span class="bullet">- </span>项目上传</span><br><span class="line"><span class="bullet">- </span>项目依赖</span><br><span class="line"><span class="bullet">- </span>数据迁移</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>Nginx</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>uWSGI</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>Nginx和uWSGI对接</span><br></pre></td></tr></table></figure><h2 id="二、虚拟环境"><a href="#二、虚拟环境" class="headerlink" title="二、虚拟环境"></a>二、虚拟环境</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、安装</span></span><br><span class="line">pip install virtualenv</span><br><span class="line">pip install virtualenvwrapper</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、查看</span></span><br><span class="line">type virtualenvwrapper.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、配置</span></span><br><span class="line">vi ~/.bashrc</span><br><span class="line"># 文件最后添加:</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">WORKON_HOME</span>=~/.virtualenv</span><br><span class="line">source /usr/local/bin/virtualenvwrapper.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4、创建对应目录</span></span><br><span class="line">mkdir ~/.virtualenv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5、刷新环境</span></span><br><span class="line">source ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6、创建虚拟环境</span></span><br><span class="line">mkvirtualenv axf -p /usr/bin/python3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7、检测</span></span><br></pre></td></tr></table></figure><blockquote><p>注意: sudo apt install virtualenvwrapper</p></blockquote><h2 id="三、数据库"><a href="#三、数据库" class="headerlink" title="三、数据库"></a>三、数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、安装</span></span><br><span class="line">apt <span class="keyword">install</span> mysql-<span class="keyword">server</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、设置开机自启动</span></span><br><span class="line">systemctl <span class="keyword">enable</span> mysql    </span><br><span class="line">[<span class="keyword">enable</span>、<span class="keyword">disable</span>、<span class="keyword">start</span>、<span class="keyword">stop</span>、restart、<span class="keyword">status</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、测试</span></span><br><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><blockquote><p>注意: <code>apt update</code>更新源操作</p></blockquote><h2 id="四、项目上传"><a href="#四、项目上传" class="headerlink" title="四、项目上传"></a>四、项目上传</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式一: scp命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式二: Github</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式三: pycharm自动工具</span></span><br><span class="line"><span class="comment"># 服务器创建项目目录</span></span><br><span class="line">mkdir <span class="regexp">/var/</span>www<span class="regexp">/axf/</span> -p</span><br><span class="line"><span class="comment"># 配置pycharm</span></span><br></pre></td></tr></table></figure><h2 id="五、项目依赖"><a href="#五、项目依赖" class="headerlink" title="五、项目依赖"></a>五、项目依赖</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 生成依赖文件</span></span><br><span class="line">pip freeze &gt; reqirement.txt</span><br><span class="line"></span><br><span class="line"><span class="meta"># 安装依赖</span></span><br><span class="line">pip install -r reqirement.txt</span><br></pre></td></tr></table></figure><h2 id="六、数据迁移"><a href="#六、数据迁移" class="headerlink" title="六、数据迁移"></a>六、数据迁移</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 备份</span></span><br><span class="line">mysqldump -uroot -p python1812axf &gt; dir/python1812axf.sql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 恢复</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database python1812axf charset=utf8;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> use python1812axf;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">source</span> /var/www/axf/dir/python1812axf.sql</span></span><br></pre></td></tr></table></figure><blockquote><p>注意: 修改Django的数据库配置</p></blockquote><h2 id="七、启动项目"><a href="#七、启动项目" class="headerlink" title="七、启动项目"></a>七、启动项目</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 启动</span></span><br><span class="line">python manager.py runserver <span class="number">0</span>:<span class="number">8000</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 浏览器查看</span></span><br></pre></td></tr></table></figure><h2 id="八、Nginx"><a href="#八、Nginx" class="headerlink" title="八、Nginx"></a>八、Nginx</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 1、获取 key</span></span><br><span class="line">wget https:<span class="comment">//nginx.org/keys/nginx_signing.key</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta"># 2、添加key</span></span><br><span class="line">sudo apt-key add nginx_signing.key</span><br><span class="line"></span><br><span class="line"><span class="meta"># 3、添加源</span></span><br><span class="line">echo <span class="string">"deb http://nginx.org/packages/ubuntu `lsb_release -cs` nginx"</span> \</span><br><span class="line">    | sudo tee /etc/apt/sources.list.d/nginx.list</span><br><span class="line">    </span><br><span class="line">echo <span class="string">"deb http://nginx.org/packages/mainline/ubuntu `lsb_release -cs` nginx"</span> \</span><br><span class="line">    | sudo tee /etc/apt/sources.list.d/nginx.list</span><br><span class="line"></span><br><span class="line"><span class="meta"># 4、更新源</span></span><br><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line"><span class="meta"># 5、安装nginx</span></span><br><span class="line">apt install nginx</span><br><span class="line"></span><br><span class="line"><span class="meta"># 6、设置开机自启动</span></span><br><span class="line">systemctl enable nginx</span><br><span class="line"></span><br><span class="line"><span class="meta"># 7、设置启动</span></span><br><span class="line">systemctl start nginx</span><br><span class="line"></span><br><span class="line"><span class="meta"># 8、查看状态</span></span><br><span class="line">systemctl status nginx</span><br><span class="line"></span><br><span class="line"><span class="meta"># 9、测试</span></span><br><span class="line">浏览器中访问自己的IP</span><br></pre></td></tr></table></figure><blockquote><p>备注: 能访问，即表示Nginx安装成功</p></blockquote><h2 id="九、Nginx配置1"><a href="#九、Nginx配置1" class="headerlink" title="九、Nginx配置1"></a>九、Nginx配置1</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 配置文件所在位置 /etc/nginx/nginx.conf</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 拷贝(备份)</span></span><br><span class="line">cp nginx.conf nginx.conf.temp</span><br><span class="line"></span><br><span class="line"><span class="meta"># 编辑文件</span></span><br><span class="line">http&#123;</span><br><span class="line">    <span class="meta"># <span class="meta-keyword">include</span> /etc/nginx/conf.d/*.conf;</span></span><br><span class="line">    <span class="class">server </span>&#123;</span><br><span class="line">        location /<span class="class">static </span>&#123;</span><br><span class="line">            alias <span class="meta-keyword">/var/</span>www<span class="meta-keyword">/axf/</span>static;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta"># 杀死服务</span></span><br><span class="line">pkill <span class="number">-9</span> nginx</span><br><span class="line"></span><br><span class="line"><span class="meta"># 检查是否杀死服务</span></span><br><span class="line">ps -ef | grep nginx</span><br><span class="line"></span><br><span class="line"><span class="meta"># 指定配置文件启动</span></span><br><span class="line">nginx -c nginx.conf</span><br><span class="line"></span><br><span class="line"><span class="meta"># 检查</span></span><br><span class="line"><span class="symbol">http:</span><span class="comment">//39.98.84.248/static/base/img/home.png</span></span><br></pre></td></tr></table></figure><h2 id="十、uWSGI"><a href="#十、uWSGI" class="headerlink" title="十、uWSGI"></a>十、uWSGI</h2><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">要注意 WSGI / uwsgi / uWSGI 这三个概念的区分。</span><br><span class="line">    WSGI是一种通信协议。</span><br><span class="line">    uwsgi是一种线路协议而不是通信协议，在此常用于在uWSGI服务器与其他网络服务器的数据通信。</span><br><span class="line">    而uWSGI是实现了uwsgi和WSGI两种协议的Web服务器。</span><br><span class="line">uwsgi协议是一个uWSGI服务器自有的协议，它用于定义传输信息的类型（<span class="keyword">type</span> <span class="type">of </span>information），每一个uwsgi packet前<span class="number">4</span>byte为传输信息类型描述，它与WSGI相比是两样东西。</span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装前   （python3欠缺的 apt install python3-dev）</span></span><br><span class="line">pip install uwsgi</span><br><span class="line"></span><br><span class="line"><span class="comment">########## django 配置.ini</span></span><br><span class="line">[uwsgi]</span><br><span class="line"><span class="comment"># 直接作为web服务器使用</span></span><br><span class="line"><span class="attribute">http</span>=0.0.0.0:8030</span><br><span class="line"><span class="comment"># 配置工程目录</span></span><br><span class="line"><span class="attribute">chdir</span>=/var/www/axf</span><br><span class="line"><span class="comment"># wsgi文件</span></span><br><span class="line"><span class="comment"># /var/www/axf/Python181AXF/wsgi.py</span></span><br><span class="line"><span class="attribute">wsgi-file</span>=Python181AXF/wsgi.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进程数量</span></span><br><span class="line"><span class="attribute">processes</span>=1</span><br><span class="line"><span class="comment"># 线程</span></span><br><span class="line"><span class="attribute">theads</span>=2</span><br><span class="line"><span class="comment"># 使能</span></span><br><span class="line"><span class="attribute">enable-theads</span>=<span class="literal">True</span></span><br><span class="line"><span class="comment"># PID文件</span></span><br><span class="line"><span class="attribute">pidfile</span>=uwsgi.pid</span><br><span class="line"><span class="comment"># 日志文件</span></span><br><span class="line"><span class="attribute">daemonize</span>=uwsgi.log</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">######### flask配置</span></span><br><span class="line">[uwsgi]</span><br><span class="line"><span class="attribute">socket</span>=0.0.0.0:8030</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置工程目录</span></span><br><span class="line"><span class="attribute">chdir</span>=/var/www/flask</span><br><span class="line"><span class="comment"># 入口文件</span></span><br><span class="line"><span class="attribute">wsgi-file</span>=manage.py</span><br><span class="line"><span class="comment"># 应用名称</span></span><br><span class="line"><span class="attribute">callable</span>=app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进程数量</span></span><br><span class="line"><span class="attribute">processes</span>=1</span><br><span class="line"><span class="comment"># 线程</span></span><br><span class="line"><span class="attribute">theads</span>=2</span><br><span class="line"><span class="comment"># 使能</span></span><br><span class="line"><span class="attribute">enable-theads</span>=<span class="literal">True</span></span><br><span class="line"><span class="comment"># PID文件</span></span><br><span class="line"><span class="attribute">pidfile</span>=uwsgi.pid</span><br><span class="line"><span class="comment"># 日志文件</span></span><br><span class="line"><span class="attribute">daemonize</span>=uwsgi.log</span><br></pre></td></tr></table></figure><blockquote><p>备注: 必须是安装在对应的虚拟环境中!<br>报错: 因为python3开发环境不完整有部分包是欠缺的 <code>apt install python3-dev</code></p></blockquote><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 启动</span></span><br><span class="line">uwsgi --ini uwsgi.ini</span><br><span class="line"></span><br><span class="line"><span class="meta"># 停止</span></span><br><span class="line">pkill <span class="number">-9</span> uwsgi</span><br><span class="line"></span><br><span class="line"><span class="meta"># 检查是否杀死服务</span></span><br><span class="line">ps -ef | grep uwsgi</span><br><span class="line"></span><br><span class="line"><span class="meta"># 再启动  uwsgi --ini uwsgi.ini</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 检查是否启动Django项目成功 (没有样式的)</span></span><br><span class="line">http:<span class="comment">//39.98.84.248:8020/axf/</span></span><br></pre></td></tr></table></figure><h2 id="十一、Nginx和uWSGI对接"><a href="#十一、Nginx和uWSGI对接" class="headerlink" title="十一、Nginx和uWSGI对接"></a>十一、Nginx和uWSGI对接</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">############ uWSGI配置更改</span><br><span class="line"># 直接作为web服务器使用</span><br><span class="line"># http=<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8030</span></span><br><span class="line"># 对接nginx</span><br><span class="line">socket=<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8030</span></span><br><span class="line"></span><br><span class="line">############ nginx.conf配置</span><br><span class="line">http &#123;</span><br><span class="line">    server &#123;</span><br><span class="line">    <span class="comment">//listen 82;  新项目新端口</span></span><br><span class="line"><span class="comment">//server_name 112.74.175.33:81; ip地址</span></span><br><span class="line">location / &#123;</span><br><span class="line">            include /etc/nginx/uwsgi_params;</span><br><span class="line">            uwsgi_pass <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8030</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一般配置正确之后还显示502错误的话，可能是没有数据库权限，看看数据库用户需不需要创建！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、项目部署基本流程&quot;&gt;&lt;a href=&quot;#一、项目部署基本流程&quot; class=&quot;headerlink&quot; title=&quot;一、项目部署基本流程&quot;&gt;&lt;/a&gt;一、项目部署基本流程&lt;/h2&gt;&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table
      
    
    </summary>
    
      <category term="nginx部署" scheme="https://addyzk.github.io/categories/nginx%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="web" scheme="https://addyzk.github.io/tags/web/"/>
    
  </entry>
  
</feed>
